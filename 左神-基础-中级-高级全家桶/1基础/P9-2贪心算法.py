'''
工作中，策略设计最常用的算法。
'''
'''
贪心在面试中貌似不常考，因为没有区分度，不能持续优化分出369等；
贪心是个0-1的问题，想到就做出来了，想不到就做不出来。且如果想到，代码是很短的。

就是刷经验，直觉告诉你怎么贪合适。不要去证明。

自己有时间用大数据随机对数器去验证，用完全暴力解做标准。

其他的先不了解了，性价比不高。
'''

# ---------------------- 1.会议问题 ---------------------- #
'''
一堆会议开始结束时间，安排最多的会。
谁开始的早安排谁、谁时间短安排谁都能举返例子。

应该：谁结束的早安排谁，流程：
        （1）找结束最早的，把冲突的删掉；
        （2）从剩下的找结束最早的，重复...

event = [start, end]
'''

def maxNum(events):
    # 按结束时间排序
    events = sorted(events, key=lambda x:x[1])

    end = 0    # 初始结束时间，持续更新
    res = 0
    for event in events:
        if event[0] >= end:
            end = event[1]
            res += 1
    return res
