# ------------------- 1.计数排序 ------------------ #
'''
todo
'''
'''
之前的O(N^2)与O(NlogN)的排序都是基于比较的排序，都存在数字的比较与交换。且所有过程可以复用。

桶的思想上根据数据状况，不依赖比较，依赖统计。

流程：
如对一堆人的年龄arr排序，因为年龄的数据状况是[0-200]，所以准备200长度的数组，每个位置表示这个年龄出现的个数。
遍历arr：遇到一个就对 对应的年龄频次 + 1
再根据词频把有序数组进行还原即可。

时间O(N)
但是依赖数据状况，如果没有数据范围，或范围很大就没办法了。

不基于比较的排序都是基于数据状况定制的，应用范围很窄！
'''

# ------------------------------------------------ #


# ------------------- 2.基数排序 ------------------ #
'''
例子：[17,13,25,100,72]，先看最多多少位，不够的补0。最高3位
   [017,013,025,100,072]
准备10个容器（桶），可以说数组、队列，什么都行。

（1）从左向右，按个位进入对应的桶
[100],[072],[013],[025],[017],...
  0     2     3     5     7

（2）按桶从左到右倒出来
[100,072,013,025,017]
  
（3）按十位进桶
[100],[013,017],[025],[072]
  0       1       2     7
  
（4）出桶
[100,013,017,025,072]

（5）按百位进
[013,017,025,072][100]
         0         1
（6）出桶即为所求

核心：优先级高的放在最后，百位优先级高！每次进桶都是按某位进行了相对位置的排序，并保留着顺序继续进行。直到所有位数都完成。

'''
